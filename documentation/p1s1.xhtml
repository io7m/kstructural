<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>io7m-kstructural 0.3.0 Documentation: 1.1. Orientation</title><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/><link rel="stylesheet" type="text/css" href="kstructural-layout.css"/><link rel="stylesheet" type="text/css" href="kstructural-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st300_body"><div class="st300_navbar st300_navbar_top"><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_title_cell">1. Package Information</td><td class="st300_navbar_up_title_cell">1. Package Information</td><td class="st300_navbar_next_title_cell">1.2. Installation</td></tr><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p1.xhtml#st300_p1" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p1.xhtml#st300_p1" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p1s2.xhtml#st300_p1s2" title="Go to next page">Next</a></td></tr></table><hr class="st300_hr"/></div><div class="st300_section_container"><a id="pkg.orientation"/><div class="st300_section_title_number"><a id="st300_p1s1" href="#st300_p1s1" title="Section 1.1: Orientation">1.1</a></div><div class="st300_section_title">Orientation</div><ul class="st300_contents st300_section_contents_outer st300_section_contents"><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s1.xhtml#st300_p1s1ss1" title="Link to subsection 1.1.1: Overview">1.1.1. Overview</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s1.xhtml#st300_p1s1ss2" title="Link to subsection 1.1.2: Metadata">1.1.2. Metadata</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s1.xhtml#st300_p1s1ss3" title="Link to subsection 1.1.3: Semantic Simplicity">1.1.3. Semantic Simplicity</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s1.xhtml#st300_p1s1ss4" title="Link to subsection 1.1.4: Lightweight Syntax">1.1.4. Lightweight Syntax</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s1.xhtml#st300_p1s1ss5" title="Link to subsection 1.1.5: Portability">1.1.5. Portability</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s1.xhtml#st300_p1s1ss6" title="Link to subsection 1.1.6: Specification">1.1.6. Specification</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s1.xhtml#st300_p1s1ss7" title="Link to subsection 1.1.7: Modular Documents">1.1.7. Modular Documents</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s1.xhtml#st300_p1s1ss8" title="Link to subsection 1.1.8: Comparison With Other Systems">1.1.8. Comparison With Other Systems</a></li></ul><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s1ss1" href="#st300_p1s1ss1" title="Subsection 1.1.1: Overview">1.1.1</a></div><div class="st300_subsection_title">Overview</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss1c1" href="#st300_p1s1ss1c1" title="Paragraph 1.1.1.1">1</a></div><div class="st300_paragraph">The <span class="st300_term package">structural</span> language is a syntactically lightweight language for writing technical documentation.</div></div></div><div class="st300_subsection_container"><a id="pkg.orientation.meta"/><div class="st300_subsection_title_number"><a id="st300_p1s1ss2" href="#st300_p1s1ss2" title="Subsection 1.1.2: Metadata">1.1.2</a></div><div class="st300_subsection_title">Metadata</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss2c1" href="#st300_p1s1ss2c1" title="Paragraph 1.1.2.1">1</a></div><div class="st300_paragraph">The <span class="st300_term package">structural</span> language allows for tagging of terms with <span class="st300_term term">metadata</span>. For example, in this document, every reference to the name <span class="st300_term package">structural</span> is tagged with <span class="st300_term constant">"package"</span>. Individual terms within a document are given semantic meaning. The available tags are entirely user-defined: The language merely provides a way to apply tags, but does not define any tags of its own.</div></div></div><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s1ss3" href="#st300_p1s1ss3" title="Subsection 1.1.3: Semantic Simplicity">1.1.3</a></div><div class="st300_subsection_title">Semantic Simplicity</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss3c1" href="#st300_p1s1ss3c1" title="Paragraph 1.1.3.1">1</a></div><div class="st300_paragraph">The <span class="st300_term package">structural</span> language currently defines around twenty elements. The language is trivial to learn, the number of possible permutations of elements is low, and the output is predictable.</div></div></div><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s1ss4" href="#st300_p1s1ss4" title="Subsection 1.1.4: Lightweight Syntax">1.1.4</a></div><div class="st300_subsection_title">Lightweight Syntax</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss4c1" href="#st300_p1s1ss4c1" title="Paragraph 1.1.4.1">1</a></div><div class="st300_paragraph">The <span class="st300_term package">structural</span> language defines an abstract model for documents as an algebraic data type. It then defines multiple formats, all of which compile down to the same internal model. The canonical format is defined in terms of <span class="st300_term term">s-expressions</span> and can be parsed at a basic level by any standard s-expression parser. An XML format with a full RELAX-NG schema is provided for legacy compatibility. Additionally, an <span class="st300_term term">imperative</span> format is provided that allows for syntax that is only slightly more heavyweight than <span class="st300_term term">Markdown</span> whilst still allowing for the same control over <a class="st300_link" href="p1s1.xhtml#pkg.orientation.meta">metadata</a> and document structure. Documents may freely combine elements written in any of the formats via the standard <a class="st300_link" href="p1s1.xhtml#pkg.orientation.modular">import</a> mechanism <span class="st300_footnote_reference">[<a href="p1s1.xhtml#st300_f_2061_0" id="st300_fr_252" title="Jump to footnote pkg.orientation.import_xml (reference 0)">6</a>]</span>.</div></div></div><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s1ss5" href="#st300_p1s1ss5" title="Subsection 1.1.5: Portability">1.1.5</a></div><div class="st300_subsection_title">Portability</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss5c1" href="#st300_p1s1ss5c1" title="Paragraph 1.1.5.1">1</a></div><div class="st300_paragraph">The <span class="st300_term package">kstructural</span> implementation is written primarily in the <a class="st300_link_external" href="http://kotlinlang.org/">Kotlin</a> language using APIs defined in Java 8. The implementation can therefore execute on any JVM supporting Java 8 and above. This also means that the language can be used to generate documentation as part of the build process for Java based projects without having to assume the existence of any platform-specific native binaries.</div></div></div><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s1ss6" href="#st300_p1s1ss6" title="Subsection 1.1.6: Specification">1.1.6</a></div><div class="st300_subsection_title">Specification</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss6c1" href="#st300_p1s1ss6c1" title="Paragraph 1.1.6.1">1</a></div><div class="st300_paragraph">The <span class="st300_term package">structural</span> language is carefully and unambiguously specified as an executable Haskell specification.</div></div></div><div class="st300_subsection_container"><a id="pkg.orientation.modular"/><div class="st300_subsection_title_number"><a id="st300_p1s1ss7" href="#st300_p1s1ss7" title="Subsection 1.1.7: Modular Documents">1.1.7</a></div><div class="st300_subsection_title">Modular Documents</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss7c1" href="#st300_p1s1ss7c1" title="Paragraph 1.1.7.1">1</a></div><div class="st300_paragraph">The <span class="st300_term package">structural</span> language supports modular documents with a simple import system: Documents may import elements or raw text from files, so large technical manuals can be cleanly separated into files based on logical content. Intra-document links are fully supported and full referential integrity checks are performed to ensure that links always point to elements that actually exist. Circular imports are detected and prevented. Additionally, the parsers are constructed to be secure by default: Malicious documents cannot import files outside of a given base directory, and in the case of the XML encoding, cannot cause the XML parser to perform requests over the network for remote content.</div></div></div><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s1ss8" href="#st300_p1s1ss8" title="Subsection 1.1.8: Comparison With Other Systems">1.1.8</a></div><div class="st300_subsection_title">Comparison With Other Systems</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss8c1" href="#st300_p1s1ss8c1" title="Paragraph 1.1.8.1">1</a></div><div class="st300_paragraph">In the table below, <span class="st300_term term">Metadata</span> should be taken to mean that the language allows for expressing the semantic meaning of the contents of the documents, as opposed to just being a series of formatting commands.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss8c2" href="#st300_p1s1ss8c2" title="Paragraph 1.1.8.2">2</a></div><div class="st300_paragraph"><span class="st300_term term">Semantic Simplicity</span> is a somewhat subjective (but somewhat measurable) judgement of how simple the conceptual model is of each language. An excellent way to measure this aspect of a language is to attempt to come up with a definition of an algebraic type that is able to represent a parsed and validated document in the given language <span class="st300_footnote_reference">[<a href="p1s1.xhtml#st300_f_1925_0" id="st300_fr_556" title="Jump to footnote pkg.orientation.semantic_latex_note (reference 0)">0</a>]</span>.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss8c3" href="#st300_p1s1ss8c3" title="Paragraph 1.1.8.3">3</a></div><div class="st300_paragraph"><span class="st300_term term">Lightweight Syntax</span> is an indication of the ratio between markup and actual document content. For example, XML is notoriously verbose and the text of some documents can often consist more of XML elements than actual content.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss8c4" href="#st300_p1s1ss8c4" title="Paragraph 1.1.8.4">4</a></div><div class="st300_paragraph">The term <span class="st300_term term">Specification</span> should be taken to mean that both the language has a complete formal specification of the syntax and the underlying semantic model, and that documents can be machine-checked against this specification. The important point is: For a given document, can a machine determine unambiguously whether or not a document is valid? This is critical for both for ensuring that documents remain accessible decades into the future, and for ensuring that different implementations of languages assign the same meaning to documents: If a language does not have a machine-checkable specification, then users of that language are locked into that implementation of the language perpetually. Languages are assigned a value of <span class="st300_term term">Informal</span> if they have at least made an attempt at a complete specification even if the specification is ambiguous, unimplementable, and/or does not provide any means to check documents.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss8c5" href="#st300_p1s1ss8c5" title="Paragraph 1.1.8.5">5</a></div><div class="st300_paragraph">The term <span class="st300_term term">Portability</span> should be taken to mean that the language either has a platform-independent implementation, or implementations exist for multiple platforms <span class="st300_footnote_reference">[<a href="p1s1.xhtml#st300_f_1943_0" id="st300_fr_769" title="Jump to footnote pkg.orientation.portability_note (reference 0)">1</a>]</span>.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss8c6" href="#st300_p1s1ss8c6" title="Paragraph 1.1.8.6">6</a></div><div class="st300_paragraph">The term <span class="st300_term term">Modular Documents</span> should be taken to mean that a language provides a way to break documents into multiple files. Languages are assigned a value of <span class="st300_term term">Import</span> if they have a language-supported system that actually parses external files and performs substitutions into an abstract syntax tree. Languages are assigned a value of <span class="st300_term term">Include</span> if they only implement a simple-minded system akin to macro expansions or the C preprocessor (where the contents of external files are simply dumped verbatim into the current file and the whole mess is parsed as one unit).</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p1s1ss8c7" href="#st300_p1s1ss8c7" title="Formal item 1.1.8.7: Feature Comparison">1.1.8.7 Feature Comparison</a></div><div class="st300_formal_item_content"><table class="st300_table comparison" summary="Comparison with other systems"><thead class="st300_table_head"><tr><th class="st300_table_column_name"/><th class="st300_table_column_name">structural</th><th class="st300_table_column_name">DocBook</th><th class="st300_table_column_name">Markdown</th><th class="st300_table_column_name">Texinfo</th><th class="st300_table_column_name">troff</th><th class="st300_table_column_name">AsciiDoc</th><th class="st300_table_column_name">reStructuredText</th><th class="st300_table_column_name">LaTeX</th></tr></thead><tbody class="st300_table_body"><tr><td class="st300_table_cell">Metadata</td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td></tr><tr><td class="st300_table_cell">Semantic Simplicity</td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_neutral">Maybe</span> <span class="st300_footnote_reference">[<a href="p1s1.xhtml#st300_f_1997_0" id="st300_fr_948" title="Jump to footnote pkg.orientation.markdown_semantic (reference 0)">3</a>]</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td></tr><tr><td class="st300_table_cell">Lightweight Syntax</td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_neutral">Questionable</span></td></tr><tr><td class="st300_table_cell">Specification</td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_neutral">Informal</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_neutral">Informal</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td></tr><tr><td class="st300_table_cell">Portability</td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_neutral">Maybe</span> <span class="st300_footnote_reference">[<a href="p1s1.xhtml#st300_f_2014_0" id="st300_fr_1056" title="Jump to footnote pkg.orientation.markdown_port (reference 0)">4</a>]</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_neutral">Maybe</span> <span class="st300_footnote_reference">[<a href="p1s1.xhtml#st300_f_2039_0" id="st300_fr_1066" title="Jump to footnote pkg.orientation.troff_unix (reference 0)">5</a>]</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Yes</span></td></tr><tr><td class="st300_table_cell">Modular Documents</td><td class="st300_table_cell"><span class="st300_term comparison_good">Import</span></td><td class="st300_table_cell"><span class="st300_term comparison_good">Import</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_neutral">Include</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_neutral">Include</span></td><td class="st300_table_cell"><span class="st300_term comparison_bad">No</span></td><td class="st300_table_cell"><span class="st300_term comparison_neutral">Include</span></td></tr></tbody></table></div></div><div class="st300_paragraph_container"><a id="pkg.orientation.docbook"/><div class="st300_paragraph_number"><a id="st300_p1s1ss8c8" href="#st300_p1s1ss8c8" title="Paragraph 1.1.8.8">8</a></div><div class="st300_paragraph">The <a class="st300_link_external" href="http://docbook.org">DocBook</a> system is similar to <span class="st300_term package">structural</span> in that it allows for metadata within a document. DocBook, however, takes a different approach in that it defines elements for all of the things that authors may be expected to talk about in technical documentation. For example, if an author wants to tag a name as being the name of a software package, the name has to be contained within a <a class="st300_link_external" href="http://docbook.org/tdg5/en/html/package.html">package</a> element. In terms of semantic simplicity, the sheer number of defined elements and the resulting possible permutations of elements mean that it is difficult to make the case that DocBook is in any way <span class="st300_term term">simple</span>. In the author's experience, there are many combinations of elements in DocBook that are valid according to the schema but cannot actually be used in practice because the resulting XHTML output becomes ugly or difficult to style in a useful manner. DocBook is, however, strongly and unambiguously specified: If a document is well-formed XML, it can be machine-checked against the published schema and it is immediately known whether or not the document is valid. DocBook also allows for modular documents via the standard XML <a class="st300_link_external" href="https://www.w3.org/TR/xinclude/">XInclude</a> mechanism. Unfortunately, due to DocBook being defined in XML, writing documents using it can be an exercise in physical stamina. XML is notorious for being syntactically heavyweight and really requires editor support to avoid causing repetitive strain injury.</div></div><div class="st300_paragraph_container"><a id="pkg.orientation.markdown"/><div class="st300_paragraph_number"><a id="st300_p1s1ss8c9" href="#st300_p1s1ss8c9" title="Paragraph 1.1.8.9">9</a></div><div class="st300_paragraph"><a class="st300_link_external" href="http://daringfireball.net/projects/markdown/">Markdown</a> was originally designed as a trivial text format intended for quick conversion to HTML. Additionally, Markdown is intended to be readable without processing. Unfortunately, the original description of Markdown has numerous ambiguities, meaning that almost every implementation of the format differs in important ways. It was also designed with the incredibly poorly thought out idea that no document should be considered invalid; every mistake simply causes silent failure or corrupted output. It offers absolutely no standard way to incorporate metadata into documents: Terms may be marked as being bold, italic, or monospace, and very little else. It offers no way to make documents modular, and most implementations require the user to manually concatenate their documents into one large file before passing it to the Markdown processor. An attempt has been made to formalize a compatible common subset of Markdown into a system known as <a class="st300_link_external" href="http://commonmark.org/">CommonMark</a>. Unfortunately, after two years, the compatible subset is still rather poorly specified and contains almost none of the features of any existing implementation such as footnotes and intra-document links <span class="st300_footnote_reference">[<a href="p1s1.xhtml#st300_f_1963_0" id="st300_fr_1541" title="Jump to footnote pkg.orientation.markdown_foot (reference 0)">2</a>]</span>.</div></div><div class="st300_paragraph_container"><a id="pkg.orientation.texinfo"/><div class="st300_paragraph_number"><a id="st300_p1s1ss8c10" href="#st300_p1s1ss8c10" title="Paragraph 1.1.8.10">10</a></div><div class="st300_paragraph"><a class="st300_link_external" href="https://www.gnu.org/software/texinfo/texinfo.html">GNU Texinfo</a> is a typesetting system similar to <a class="st300_link" href="p1s1.xhtml#pkg.orientation.latex">LaTeX</a> and has all of the same advantages and flaws as that system.</div></div><div class="st300_paragraph_container"><a id="pkg.orientation.troff"/><div class="st300_paragraph_number"><a id="st300_p1s1ss8c11" href="#st300_p1s1ss8c11" title="Paragraph 1.1.8.11">11</a></div><div class="st300_paragraph"><a class="st300_link_external" href="https://www.gnu.org/software/groff/">troff</a> is a somewhat archaic UNIX typesetting tool primarily used to construct manual pages. Due to being a macro-based typesetting system (albeit a drastically simpler one), it suffers from most of the same disadvantages as <a class="st300_link" href="p1s1.xhtml#pkg.orientation.latex">LaTeX</a>. The syntax, however, is extremely lightweight and easy to parse.</div></div><div class="st300_paragraph_container"><a id="pkg.orientation.latex"/><div class="st300_paragraph_number"><a id="st300_p1s1ss8c12" href="#st300_p1s1ss8c12" title="Paragraph 1.1.8.12">12</a></div><div class="st300_paragraph"><a class="st300_link_external" href="https://latex-project.org/">LaTeX</a> is a set of macros for the <a class="st300_link_external" href="http://tug.org/">TeX</a> typesetting system. While it produces very aesthetically pleasing output and has moderately lightweight syntax, it suffers from an excruciatingly error-prone document authoring workflow due to its macro-based nature. The user is forced to manage the state of an enormous imperative typesetting engine, error messages are incomprehensible at best and typically contain layers of elements that have appeared from inside expanded macros. Users are forced to use external packages of macros to get support for basic features such as images, and due to the complete lack of a type system or indeed any kind of module system at all, packages can and do break when combined in unexpected ways. The language has no specification, and an <span class="st300_term term">include</span> -based system for modular documents (made extremely dangerous by the presence of the global state machine). The <span class="st300_term package">kstructural</span> implementation of the <span class="st300_term package">structural</span> language currently contains support for producing LaTeX code. This protects users from having to have anything to do with the LaTeX or TeX system directly.</div></div><div class="st300_paragraph_container"><a id="pkg.orientation.asciidoc"/><div class="st300_paragraph_number"><a id="st300_p1s1ss8c13" href="#st300_p1s1ss8c13" title="Paragraph 1.1.8.13">13</a></div><div class="st300_paragraph"><a class="st300_link_external" href="http://www.methods.co.nz/asciidoc/">AsciiDoc</a> is a Python-based text document format. It has all of the advantages and disadvantages of a <a class="st300_link" href="p1s1.xhtml#pkg.orientation.markdown">Markdown</a> based system but supports a drastically larger feature set than most Markdown implementations. It also contains an <a class="st300_link_external" href="http://www.methods.co.nz/asciidoc/chunked/apc.html">insecure-by-default</a> mode of operation that makes evaluating arbitrary documents a risky proposition. It has no specification.</div></div><div class="st300_paragraph_container"><a id="pkg.orientation.restructuredtext"/><div class="st300_paragraph_number"><a id="st300_p1s1ss8c14" href="#st300_p1s1ss8c14" title="Paragraph 1.1.8.14">14</a></div><div class="st300_paragraph"><a class="st300_link_external" href="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html">reStructuredText</a> is a text document format in the style of <a class="st300_link" href="p1s1.xhtml#pkg.orientation.asciidoc">AsciiDoc</a>. It has the same advantages and disadvantages as both AsciiDoc and Markdown. It has what appears to be a fairly complete informal specification, but does not have any way to determine if a given document is valid or not.</div></div></div><div class="st300_footnotes"><hr/><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_1925_0" href="p1s1.xhtml#st300_fr_556" title="Jump back to reference 0 of footnote pkg.orientation.semantic_latex_note">0</a>]</div><div class="st300_footnote_body">Doing this for an imperative state machine such as LaTeX could easily become a research-level project.</div></div><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_1943_0" href="p1s1.xhtml#st300_fr_769" title="Jump back to reference 0 of footnote pkg.orientation.portability_note">1</a>]</div><div class="st300_footnote_body">This again assumes the existence of an unambiguous formal specifications so that multiple interoperable implementations can actually exist!</div></div><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_1963_0" href="p1s1.xhtml#st300_fr_1541" title="Jump back to reference 0 of footnote pkg.orientation.markdown_foot">2</a>]</div><div class="st300_footnote_body">Users of Markdown are resigned to the fact that they are writing documents in an implementation-specific dialect of Markdown because there is no other alternative. This is an incredibly poor long-term strategy.</div></div><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_1997_0" href="p1s1.xhtml#st300_fr_948" title="Jump back to reference 0 of footnote pkg.orientation.markdown_semantic">3</a>]</div><div class="st300_footnote_body">The <span class="st300_term package">CommonMark</span> specification has a simple semantic model due to including almost nothing.</div></div><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_2014_0" href="p1s1.xhtml#st300_fr_1056" title="Jump back to reference 0 of footnote pkg.orientation.markdown_port">4</a>]</div><div class="st300_footnote_body">There are Markdown implementations for most languages. However, there may not be an implementation that supports the specific dialect the author has used.</div></div><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_2039_0" href="p1s1.xhtml#st300_fr_1066" title="Jump back to reference 0 of footnote pkg.orientation.troff_unix">5</a>]</div><div class="st300_footnote_body">Being a traditional UNIX tool, the <span class="st300_term command">troff</span> tool is unlikely to be pleasant to use outside of UNIX.</div></div><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_2061_0" href="p1s1.xhtml#st300_fr_252" title="Jump back to reference 0 of footnote pkg.orientation.import_xml">6</a>]</div><div class="st300_footnote_body">Although elements written in the XML format cannot import non-XML elements due to limitations with <a class="st300_link_external" href="https://www.w3.org/TR/xinclude/">XInclude</a>.</div></div></div></div><div class="st300_navbar st300_navbar_bottom"><hr class="st300_hr"/><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p1.xhtml#st300_p1" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p1.xhtml#st300_p1" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p1s2.xhtml#st300_p1s2" title="Go to next page">Next</a></td></tr><tr><td class="st300_navbar_prev_title_cell">1. Package Information</td><td class="st300_navbar_up_title_cell">1. Package Information</td><td class="st300_navbar_next_title_cell">1.2. Installation</td></tr></table></div></div></body></html>
