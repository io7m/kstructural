<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Structural 3.0.0 Language Specification: 1.5. S-Expression Metasyntax</title><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/><link rel="stylesheet" type="text/css" href="kstructural-layout.css"/><link rel="stylesheet" type="text/css" href="kstructural-colour.css"/><link rel="stylesheet" type="text/css" href="specification.css"/></head><body><div class="st300_body"><div class="st300_navbar st300_navbar_top"><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_title_cell">1.4. S-Expressions</td><td class="st300_navbar_up_title_cell">1. Notational Conventions</td><td class="st300_navbar_next_title_cell">2. Model</td></tr><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p1s4.xhtml#st300_p1s4" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p1.xhtml#st300_p1" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2.xhtml#st300_p2" title="Go to next page">Next</a></td></tr></table><hr class="st300_hr"/></div><div class="st300_section_container"><a id="fmt_canon.meta"/><div class="st300_section_title_number"><a id="st300_p1s5" href="#st300_p1s5" title="Section 1.5: S-Expression Metasyntax">1.5</a></div><div class="st300_section_title">S-Expression Metasyntax</div><ul class="st300_contents st300_section_contents_outer st300_section_contents"><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s5.xhtml#st300_p1s5ss1" title="Link to subsection 1.5.1: Overview">1.5.1. Overview</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s5.xhtml#st300_p1s5ss2" title="Link to subsection 1.5.2: Rules">1.5.2. Rules</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s5.xhtml#st300_p1s5ss3" title="Link to subsection 1.5.3: Examples">1.5.3. Examples</a></li></ul><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s5ss1" href="#st300_p1s5ss1" title="Subsection 1.5.1: Overview">1.5.1</a></div><div class="st300_subsection_title">Overview</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s5ss1c1" href="#st300_p1s5ss1c1" title="Paragraph 1.5.1.1">1</a></div><div class="st300_paragraph">Because no formal standard exists to describe the actual structure of parsed s-expressions, a small language is introduced here to describe the forms used to describe the document elements specified later on in this publication. The syntax of the syntax rules are themselves given as s-expressions, and to avoid an infinite regression problem akin to trying to specify EBNF using EBNF itself, the language here is described informally with an executable Haskell specification <a class="st300_link_external" href="SEMatcher.hs">[SEMatcher.hs]</a> to make the semantics clear where English cannot.</div></div></div><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s5ss2" href="#st300_p1s5ss2" title="Subsection 1.5.2: Rules">1.5.2</a></div><div class="st300_subsection_title">Rules</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s5ss2c1" href="#st300_p1s5ss2c1" title="Paragraph 1.5.2.1">1</a></div><div class="st300_paragraph">A <span class="st300_term term">rule</span> may take one of the following forms:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p1s5ss2c2" href="#st300_p1s5ss2c2" title="Formal item 1.5.2.2: Rules">1.5.2.2 Rules</a></div><div class="st300_formal_item_content"><pre class="st300_verbatim">data Rule
  = MAnySymbol
  | MAnyQuoted
  | MAnyList
  | MExactSymbol String
  | MExactQuoted String
  | MExactList [Rule]
  | MChoice [Rule]
  | MListVariadic [Rule] Rule
  deriving Eq

</pre></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s5ss2c3" href="#st300_p1s5ss2c3" title="Paragraph 1.5.2.3">3</a></div><div class="st300_paragraph">The s-expression syntax of each rule may be inferred from the given <span class="st300_term type">Show</span> instance:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p1s5ss2c4" href="#st300_p1s5ss2c4" title="Formal item 1.5.2.4: Rule Syntax">1.5.2.4 Rule Syntax</a></div><div class="st300_formal_item_content"><pre class="st300_verbatim">instance Show Rule where
  show (MExactSymbol s)    = "(#exact-symbol " ++ s ++ ")"
  show (MExactQuoted s)    = "(#exact-quoted " ++ s ++ ")"
  show (MExactList s)      = "(#exact-list [" ++ (concatMap show s) ++ "])"
  show  MAnySymbol         = "#any-symbol"
  show  MAnyQuoted         = "#any-quoted"
  show  MAnyList           = "#any-list"
  show (MChoice s)         = "(#choice [" ++ (concatMap show s) ++ "])"
  show (MListVariadic s m) = "(#variadic [" ++ (concatMap show s) ++ "]" ++ (show m) ++ ")"

</pre></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s5ss2c5" href="#st300_p1s5ss2c5" title="Paragraph 1.5.2.5">5</a></div><div class="st300_paragraph">A rule is <span class="st300_term expression">r</span> said to <span class="st300_term term">match</span> an expression <span class="st300_term expression">e</span> if, given the <span class="st300_term function">matches</span> function defined below, <span class="st300_term expression">matches e r == True</span>.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p1s5ss2c6" href="#st300_p1s5ss2c6" title="Formal item 1.5.2.6: Informal Description Of Rules">1.5.2.6 Informal Description Of Rules</a></div><div class="st300_formal_item_content"><ul class="st300_list_unordered"><li class="st300_list_item">The <span class="st300_term expression">#any-symbol</span> rule matches an expression <span class="st300_term expression">e</span> iff <span class="st300_term expression">e</span> is a symbol.</li><li class="st300_list_item">The <span class="st300_term expression">#any-quoted</span> rule matches an expression <span class="st300_term expression">e</span> iff <span class="st300_term expression">e</span> is a quoted string.</li><li class="st300_list_item">The <span class="st300_term expression">#any-list</span> rule matches an expression <span class="st300_term expression">e</span> iff <span class="st300_term expression">e</span> is a list.</li><li class="st300_list_item">The <span class="st300_term expression">(#exact-symbol s)</span> rule matches an expression <span class="st300_term expression">e</span> iff <span class="st300_term expression">e</span> is a symbol with the value <span class="st300_term expression">s</span>.</li><li class="st300_list_item">The <span class="st300_term expression">(#exact-quoted s)</span> rule matches an expression <span class="st300_term expression">e</span> iff <span class="st300_term expression">e</span> is a quoted string with the value <span class="st300_term expression">s</span>.</li><li class="st300_list_item">The <span class="st300_term expression">(#exact-list (m₀ m₁ ... mₙ))</span> rule matches an expression <span class="st300_term expression">e</span> iff <span class="st300_term expression">e</span> is a list, the length of <span class="st300_term expression">e</span> is <span class="st300_term expression">n + 1</span>, and <span class="st300_term expression">∀k. 0 &lt;= k &lt;= n → e[k] matches mₖ</span>.</li><li class="st300_list_item">The <span class="st300_term expression">(#choice (m₀ ... mₙ))</span> rule matches an expression <span class="st300_term expression">e</span> iff <span class="st300_term emphasis">exactly one</span> rule in the given list <span class="st300_term expression">(m₀ ... mₙ)</span> matches <span class="st300_term expression">e</span>. Accordingly, the rule <span class="st300_term expression">(#choice ())</span> never matches anything.</li><li class="st300_list_item">The <span class="st300_term expression">(#variadic (m₀ m₁ ... mₙ) r)</span> rule matches an expression <span class="st300_term expression">e</span> iff <span class="st300_term expression">e</span> is a list, the length of <span class="st300_term expression">e</span> is <span class="st300_term expression">&gt;= n + 1</span>, <span class="st300_term expression">∀k. 0 &lt;= k &lt;= n → e[k] matches mₖ</span>, and the remaining elements in <span class="st300_term expression">e</span> match <span class="st300_term expression">r</span>. Accordingly, the rule <span class="st300_term expression">(#variadic () r)</span> will check that every element of a given list matches <span class="st300_term expression">r</span>, and will always match for a given empty list.</li></ul></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s5ss2c7" href="#st300_p1s5ss2c7" title="Paragraph 1.5.2.7">7</a></div><div class="st300_paragraph">Matching an arbitrary s-expression against a rule is a simple matter of checking to see if the structure of the given expression matches the structure allowed by the rule against which it is being matched. A complete definition of a matching function that encodes the above rules is as follows:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p1s5ss2c8" href="#st300_p1s5ss2c8" title="Formal item 1.5.2.8: Match Function">1.5.2.8 Match Function</a></div><div class="st300_formal_item_content"><pre class="st300_verbatim">matches :: SE.Expr -&gt; Rule -&gt; Bool
matches (SE.ESymbol e) (MExactSymbol s)    = e == s
matches (SE.ESymbol _) (MExactQuoted _)    = False
matches (SE.ESymbol _) (MExactList _)      = False
matches (SE.ESymbol _) MAnySymbol          = True
matches (SE.ESymbol _) MAnyQuoted          = False
matches (SE.ESymbol _) MAnyList            = False
matches (SE.ESymbol _) (MListVariadic _ _) = False
matches (SE.EQuoted _) MAnySymbol          = False
matches (SE.EQuoted _) MAnyQuoted          = True
matches (SE.EQuoted _) MAnyList            = False
matches (SE.EQuoted e) (MExactQuoted s)    = e == s
matches (SE.EQuoted _) (MExactSymbol _)    = False
matches (SE.EQuoted _) (MExactList _)      = False
matches (SE.EQuoted _) (MListVariadic _ _) = False
matches (SE.EList _)   (MExactSymbol _) = False
matches (SE.EList _)   (MExactQuoted _) = False
matches (SE.EList _)   MAnySymbol       = False
matches (SE.EList _)   MAnyQuoted       = False
matches (SE.EList _)   MAnyList         = True
matches (SE.EList s) (MExactList m) =
  (length s) == (length m) &amp;&amp; all (\(xe,xm) -&gt; matches xe xm) (zip s m)
matches (SE.EList s) (MListVariadic m0 mr) =
  if (length s &gt;= length m0)
  then
    let
      prefix_zip = take (length m0) (zip s m0)
      prefix_ok  = all (\(xe,xm) -&gt; matches xe xm) prefix_zip
      suffix     = drop (length m0) s
      suffix_zip = zip suffix (replicate (length suffix) mr)
      suffix_ok  = all (\(xe,xm) -&gt; matches xe xm) suffix_zip
    in
      prefix_ok &amp;&amp; suffix_ok
  else
    False
matches e (MChoice m0)= 1 == length (filter (matches e) m0)
</pre></div></div></div><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s5ss3" href="#st300_p1s5ss3" title="Subsection 1.5.3: Examples">1.5.3</a></div><div class="st300_subsection_title">Examples</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s5ss3c1" href="#st300_p1s5ss3c1" title="Paragraph 1.5.3.1">1</a></div><div class="st300_paragraph">This section is informative. These results can be reproduced by evaluating the given terms in the <span class="st300_term type">SEMatcher</span> module using Haskell's interactive command prompt.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s5ss3c2" href="#st300_p1s5ss3c2" title="Paragraph 1.5.3.2">2</a></div><div class="st300_paragraph">The expression <span class="st300_term expression">x</span> is matched by the rule <span class="st300_term expression">#any-symbol</span>, but <span class="st300_term expression">"x"</span> is not:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p1s5ss3c3" href="#st300_p1s5ss3c3" title="Formal item 1.5.3.3: Example 0">1.5.3.3 Example 0</a></div><div class="st300_formal_item_content"><pre class="st300_verbatim">&gt; matches (SE.ESymbol "x") MAnySymbol
True
&gt; matches (SE.EQuoted "x") MAnySymbol
False
</pre></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s5ss3c4" href="#st300_p1s5ss3c4" title="Paragraph 1.5.3.4">4</a></div><div class="st300_paragraph">The expression <span class="st300_term expression">(x y z)</span> is matched by the rule <span class="st300_term expression">(#exact-list (#exact-symbol "x") (#exact-symbol "y") (#exact-symbol "z"))</span>, but <span class="st300_term expression">(x y y)</span> and <span class="st300_term expression">(x y)</span> are not:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p1s5ss3c5" href="#st300_p1s5ss3c5" title="Formal item 1.5.3.5: Example 1">1.5.3.5 Example 1</a></div><div class="st300_formal_item_content"><pre class="st300_verbatim">&gt; matches (SE.EList [SE.ESymbol "x", SE.ESymbol "y", SE.ESymbol "z"]) (MExactList [MExactSymbol "x", MExactSymbol "y", MExactSymbol "z"])
True
&gt; matches (SE.EList [SE.ESymbol "x", SE.ESymbol "y", SE.ESymbol "y"]) (MExactList [MExactSymbol "x", MExactSymbol "y", MExactSymbol "z"])
False
&gt; matches (SE.EList [SE.ESymbol "x", SE.ESymbol "y"]) (MExactList [MExactSymbol "x", MExactSymbol "y", MExactSymbol "z"])
False</pre></div></div></div></div><div class="st300_navbar st300_navbar_bottom"><hr class="st300_hr"/><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p1s4.xhtml#st300_p1s4" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p1.xhtml#st300_p1" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2.xhtml#st300_p2" title="Go to next page">Next</a></td></tr><tr><td class="st300_navbar_prev_title_cell">1.4. S-Expressions</td><td class="st300_navbar_up_title_cell">1. Notational Conventions</td><td class="st300_navbar_next_title_cell">2. Model</td></tr></table></div></div></body></html>
